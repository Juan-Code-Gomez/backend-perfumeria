// Script simplificado para probar solo la autenticaci√≥n JWT
const axios = require('axios');

const BASE_URL = 'http://localhost:3000/api';

async function testAuthentication() {
  console.log('üîç PROBANDO AUTENTICACI√ìN JWT...');
  console.log('');

  try {
    // 1. LOGIN
    console.log('1Ô∏è‚É£ Haciendo login...');
    const loginResponse = await axios.post(`${BASE_URL}/auth/login`, {
      username: 'admin',
      password: 'admin123'
    });

    console.log('‚úÖ Login exitoso!');
    console.log('üìù Respuesta completa:', JSON.stringify(loginResponse.data, null, 2));
    
    const token = loginResponse.data.data.token; // El token est√° en data.data.token
    if (!token) {
      console.log('‚ùå No se recibi√≥ token en la respuesta');
      return;
    }
    
    console.log('üìù Token recibido:', token.substring(0, 50) + '...');
    
    // 2. PROBAR TOKEN CON UNA RUTA SIMPLE
    console.log('');
    console.log('2Ô∏è‚É£ Probando token con ruta protegida simple...');
    
    const protectedResponse = await axios.get(`${BASE_URL}/protected`, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ Token v√°lido! Respuesta:', protectedResponse.data);
    
    // 3. PROBAR TOKEN CON PRODUCTOS
    console.log('');
    console.log('3Ô∏è‚É£ Probando token con endpoints de productos...');
    
    const productsResponse = await axios.get(`${BASE_URL}/products`, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ Productos endpoint funciona! Total productos:', productsResponse.data.length || 0);
    
    // 4. PROBAR ESTAD√çSTICAS FINANCIERAS
    console.log('');
    console.log('4Ô∏è‚É£ Probando estad√≠sticas financieras...');
    
    const statsUrl = `${BASE_URL}/products/financial-statistics`;
    console.log('üìç URL:', statsUrl);
    
    const statsResponse = await axios.get(statsUrl, {
      headers: {
        'Authorization': `Bearer ${token}`,
        'Content-Type': 'application/json'
      }
    });
    
    console.log('‚úÖ Estad√≠sticas funcionan!');
    console.log('üìä Estad√≠sticas:', statsResponse.data);
    
  } catch (error) {
    console.log('');
    console.log('‚ùå ERROR:', error.response?.status, error.response?.statusText);
    console.log('üìù Mensaje:', error.response?.data?.message || error.message);
    
    if (error.response?.status === 401) {
      console.log('');
      console.log('üîß PROBLEMA DE AUTENTICACI√ìN:');
      console.log('   - El token JWT no se est√° validando correctamente');
      console.log('   - Revisar secreto JWT');
      console.log('   - Revisar configuraci√≥n de passport');
    }
  }
}

// Ejecutar prueba
testAuthentication();
