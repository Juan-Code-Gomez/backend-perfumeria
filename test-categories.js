async function testCategories() {
  try {
    // Login
    console.log('üîê Autenticando...');
    const loginResponse = await fetch('http://localhost:3000/api/auth/login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ username: 'admin', password: 'admin123' }),
    });
    const loginData = await loginResponse.json();
    const token = loginData.data.token;

    const headers = {
      Authorization: `Bearer ${token}`,
      'Content-Type': 'application/json',
    };

    console.log('‚úÖ Autenticaci√≥n exitosa');

    // Get all categories
    console.log('\nüìã Obteniendo todas las categor√≠as...');
    const categoriesResponse = await fetch('http://localhost:3000/api/categories', { headers });
    const categoriesData = await categoriesResponse.json();
    
    if (!categoriesData.success) {
      throw new Error('Error al obtener categor√≠as: ' + JSON.stringify(categoriesData));
    }
    
    const categories = categoriesData.data;
    
    if (!Array.isArray(categories)) {
      throw new Error('Las categor√≠as no son un array: ' + typeof categories);
    }
    
    console.log(`üìä Total de categor√≠as: ${categories.length}`);
    console.log('\nüìù Lista de categor√≠as:');
    categories.forEach((cat) => {
      console.log(`  ${cat.icon || 'üìÇ'} ${cat.name}`);
      if (cat.description) console.log(`     üìÑ ${cat.description}`);
      if (cat.color) console.log(`     üé® Color: ${cat.color}`);
      console.log(`     üë• Productos: ${cat._count?.products || 0}`);
      console.log('');
    });

    // Get statistics
    console.log('\nüìä Obteniendo estad√≠sticas...');
    const statsResponse = await fetch('http://localhost:3000/api/categories/statistics', { headers });
    const statsData = await statsResponse.json();
    const stats = statsData.data;
    console.log('üìà Estad√≠sticas de categor√≠as:');
    console.log(`  üìÅ Total: ${stats.totalCategories}`);
    console.log(`  ‚úÖ Activas: ${stats.activeCategories}`);
    console.log(`  ‚ùå Inactivas: ${stats.inactiveCategories}`);
    console.log(`  üì¶ Con productos: ${stats.categoriesWithProducts}`);
    console.log(`  üîç Sin productos: ${stats.categoriesWithoutProducts}`);

    if (stats.topCategories?.length > 0) {
      console.log('\nüèÜ Top categor√≠as por cantidad de productos:');
      stats.topCategories.forEach((cat, index) => {
        console.log(`  ${index + 1}. ${cat.name}: ${cat.productCount} productos`);
      });
    }

    // Search test
    console.log('\nüîç Probando b√∫squeda de "Perfumes"...');
    const searchResponse = await fetch('http://localhost:3000/api/categories?search=Perfumes', { headers });
    const searchData = await searchResponse.json();
    const searchResults = searchData.data;
    console.log(`üéØ Encontradas ${searchResults.length} categor√≠as:`);
    searchResults.forEach((cat) => {
      console.log(`  ‚Ä¢ ${cat.name}`);
    });

  } catch (error) {
    console.error('‚ùå Error:', error.message);
  }
}

testCategories();
